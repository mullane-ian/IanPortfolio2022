/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useThree, useFrame } from "@react-three/fiber"
import { useGLTF,QuadraticBezierLine, Float } from '@react-three/drei'
import * as THREE from 'three'
export default function FishingRod({ ...props }) {
  const group = useRef()
  const tip = useRef()
  const mat = new THREE.MeshStandardMaterial({
    color: new THREE.Color(0, 0, 0),
    roughness: .55,
    metalness: 0.9
  });
  const mat2 = new THREE.MeshStandardMaterial({
    color: new THREE.Color(1, 1, 1),
    roughness: .55,
    metalness: 0.9
  });
  const { viewport } = useThree()
  useFrame(({ mouse }) => {
    const x = (mouse.x * viewport.width) / 2
    const y = (mouse.y * viewport.height) / 2

    group.current.position.x=x * 0.1
    // group.current.position.y=y * 0.05 + 10

  })
  const { nodes, materials } = useGLTF('./glb/fishingRod-transformed.glb')
  return (

    <Float floatIntensity={20} rotationIntensity={0} >    
    <group scale={5} position={[0,10,90]} ref={group} {...props} dispose={null}>
    <group position={[0.31, -0.52, -1.52]} rotation={[Math.PI / 4, 0.06, 0]} scale={[0.13, 0.04, 0.04]}>
      <mesh geometry={nodes.Plane.geometry} material={mat2} />
      <mesh geometry={nodes.Plane_1.geometry} material={mat} />
    </group>
    <mesh geometry={nodes.Cylinder.geometry} material={mat} position={[0.04, -0.37, -1.66]} rotation={[2.33, -0.01, -0.09]} scale={[-0.07, -0.12, -0.07]} />
    <mesh geometry={nodes.Cylinder002.geometry} material={mat} position={[0.07, -0.65, -1.38]} rotation={[2.36, 0, -0.07]} scale={[-0.07, -0.08, -0.07]} />
    <mesh geometry={nodes.Cylinder001.geometry} material={mat} position={[0.13, -1.47, -0.56]} rotation={[2.36, 0, -0.03]} scale={0.08} />
    <mesh geometry={nodes.часть_1.geometry} material={mat} position={[-0.01, 0.23, -2.26]} rotation={[2.36, 0, 0]} scale={0.06} />
    <mesh geometry={nodes.крепление.geometry} material={mat} position={[-0.18, 2.23, -4.27]} rotation={[2.36, 0, -0.08]} scale={[0.04, 0.1, 0.04]} />
    <mesh ref={tip}  geometry={nodes.часть_2.geometry} material={mat} position={[-0.29, 3.64, -5.68]} rotation={[2.36, 0, -0.02]} scale={[0.03, 0.05, 0.03]} />
  </group>

      <Cable start={tip} />
    </Float>
  )
}

function Cable({ start, end, v1 = new THREE.Vector3(), v2 = new THREE.Vector3() }) {
  const ref = useRef()
  useFrame(() =>{
    let pos = (start.current.getWorldPosition(v1))

    ref.current.setPoints([pos.x,pos.y - 100,pos.z -10000],[pos.x -0.8,pos.y + 8.5,pos.z-9]), []

  })
 
  return <QuadraticBezierLine ref={ref} lineWidth={.5} color="black"  end={[0, 0, 0]}  />
}


useGLTF.preload('./glb/fishingRod-transformed.glb')
